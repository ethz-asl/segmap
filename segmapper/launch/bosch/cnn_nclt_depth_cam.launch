<?xml version="1.0" encoding="utf-8"?>

<launch>

  <arg name="respawn_value" default="false" />

  <!-- Bag file path -->
  <arg name="bag_file_1" value="/mnt/scratch1/bosch/NCLT/ros_bags/2012-04-29/no_ground.bag"/>
  <arg name="bag_file_2" value="/mnt/scratch1/bosch/NCLT/ros_bags/2012-04-29/augment.bag"/>

  <!-- Rviz visualization config file path -->
  <arg name="rviz_config_file" value="$(env HOME)/.segmap/kitti/kitti_loop_closure.rviz"/>

  <!-- ROS parameters -->
  <rosparam>use_sim_time: false</rosparam>
  <rosparam command="load" file="$(find segmapper)/launch/bosch/cnn_nclt_depth_cam.yaml"/>

  <!-- Target cloud -->
  <arg name="target_cloud" value="/mnt/scratch1/bosch/NCLT/ros_bags/base_maps/base_map02.pcd"/>
  <rosparam param="/SegMapper/SegMatchWorker/target_cloud_filename" subst_value="True">$(arg target_cloud)</rosparam>

  <!-- rviz node -->
  <!-- node name="visualizer" pkg="rviz" type="rviz" output="screen" respawn="$(arg respawn_value)" args="-d $(arg rviz_config_file)" / -->

  <!-- CNN model path -->
  <arg name="cnn_model_path" value="$(env HOME)/.segmap/trained_models/segmap64_nclt_sem/"/>
  <arg name="cnn_use_semantics" value="True"/>
  <rosparam param="/SegMapper/SegMatchWorker/SegMatch/Descriptors/cnn_model_path" subst_value="True">$(arg cnn_model_path)</rosparam>
  <rosparam param="/SegMapper/SegMatchWorker/SegMatch/Descriptors/use_semantics" subst_value="True">$(arg cnn_use_semantics)</rosparam>

  <!-- Semantics nn path -->
  <arg name="semantics_nn_path" value="$(env HOME)/.segmap/trained_models/segmap64_semantics/"/>
  <rosparam param="/SegMapper/SegMatchWorker/SegMatch/Descriptors/semantics_nn_path" subst_value="True">$(arg semantics_nn_path)</rosparam>

  <!-- segmapper node -->
  <include file="$(find segmapper)/launch/segmapper.launch">
    <arg name="icp_configuration_file" value="$(find segmapper)/launch/bosch/icp_dynamic_outdoor.yaml"/>
    <arg name="icp_input_filters_file" value="$(find segmapper)/launch/bosch/input_filters_outdoor_lidar.yaml"/>
  </include>

  <!-- rosbag player node -->
  <node name="player" pkg="rosbag" type="play" output="screen" args=" -r 1 -s 810 -q --pause $(arg bag_file_1) $(arg bag_file_2)"/>

  <!-- Tensorflow interface -->
  <node pkg="segmatch" name="tf_cnn_interface" type="tf_cnn_interface.py" output="screen"></node>
  <node pkg="segmatch" name="tf_sem_interface" type="tf_sem_interface.py" output="screen"></node>

</launch>
